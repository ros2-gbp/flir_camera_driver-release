%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/jazzy/.*$
%global __requires_exclude_from ^/opt/ros/jazzy/.*$

Name:           ros-jazzy-spinnaker-camera-driver
Version:        3.0.1
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS spinnaker_camera_driver package

License:        Apache-2 and BSD
Source0:        %{name}-%{version}.tar.gz

Requires:       ffmpeg-free-devel
Requires:       libusbx-devel
Requires:       ros-jazzy-camera-info-manager
Requires:       ros-jazzy-flir-camera-msgs
Requires:       ros-jazzy-image-transport
Requires:       ros-jazzy-rclcpp
Requires:       ros-jazzy-rclcpp-components
Requires:       ros-jazzy-sensor-msgs
Requires:       ros-jazzy-std-msgs
Requires:       yaml-cpp-devel
Requires:       ros-jazzy-ros-workspace
BuildRequires:  curl
BuildRequires:  dpkg
BuildRequires:  ffmpeg-free-devel
BuildRequires:  libcurl-devel
BuildRequires:  libusbx-devel
BuildRequires:  lsb_release
BuildRequires:  python3-distro
BuildRequires:  ros-jazzy-ament-cmake
BuildRequires:  ros-jazzy-ament-cmake-ros
BuildRequires:  ros-jazzy-camera-info-manager
BuildRequires:  ros-jazzy-flir-camera-msgs
BuildRequires:  ros-jazzy-image-transport
BuildRequires:  ros-jazzy-rclcpp
BuildRequires:  ros-jazzy-rclcpp-components
BuildRequires:  ros-jazzy-ros-environment
BuildRequires:  ros-jazzy-sensor-msgs
BuildRequires:  ros-jazzy-std-msgs
BuildRequires:  yaml-cpp-devel
BuildRequires:  ros-jazzy-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%if 0%{?with_tests}
BuildRequires:  ros-jazzy-ament-cmake-clang-format
BuildRequires:  ros-jazzy-ament-lint-auto
BuildRequires:  ros-jazzy-ament-lint-common
%endif

%description
ROS2 driver for flir spinnaker sdk

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/jazzy/setup.sh" ]; then . "/opt/ros/jazzy/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/jazzy" \
    -DAMENT_PREFIX_PATH="/opt/ros/jazzy" \
    -DCMAKE_PREFIX_PATH="/opt/ros/jazzy" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/jazzy/setup.sh" ]; then . "/opt/ros/jazzy/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/jazzy/setup.sh" ]; then . "/opt/ros/jazzy/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/jazzy

%changelog
* Tue Apr 01 2025 Bernd Pfrommer <bernd.pfrommer@gmail.com> - 3.0.1-1
- Autogenerated by Bloom

* Thu Nov 21 2024 Bernd Pfrommer <bernd.pfrommer@gmail.com> - 3.0.0-1
- Autogenerated by Bloom

* Thu Jun 20 2024 Bernd Pfrommer <bernd.pfrommer@gmail.com> - 2.0.20-1
- Autogenerated by Bloom

* Tue Jun 18 2024 Bernd Pfrommer <bernd.pfrommer@gmail.com> - 2.0.19-1
- Autogenerated by Bloom

* Tue Jun 18 2024 Bernd Pfrommer <bernd.pfrommer@gmail.com> - 2.0.18-1
- Autogenerated by Bloom

* Thu Apr 18 2024 Bernd Pfrommer <bernd.pfrommer@gmail.com> - 2.0.15-2
- Autogenerated by Bloom

* Thu Mar 28 2024 Bernd Pfrommer <bernd.pfrommer@gmail.com> - 2.0.15-1
- Autogenerated by Bloom

* Fri Mar 01 2024 Bernd Pfrommer <bernd.pfrommer@gmail.com> - 2.0.11-1
- Autogenerated by Bloom

